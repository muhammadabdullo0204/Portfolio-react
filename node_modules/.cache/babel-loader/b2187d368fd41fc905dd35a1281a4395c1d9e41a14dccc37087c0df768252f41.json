{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import '../Animation/Circles.css';\n\n// const NUM_SEGMENTS = 15; \n// const SMOOTHNESS = 0.5; \n\n// const Circles = () => {\n//   const [positions, setPositions] = useState(\n//     Array.from({ length: NUM_SEGMENTS }, () => ({ top: \"50%\", left: \"50%\" }))\n//   );\n\n//   useEffect(() => {\n//     let animationFrame;\n//     const animate = () => {\n//       setPositions((prevPositions) => {\n//         const newPositions = [...prevPositions];\n//         for (let i = 1; i < NUM_SEGMENTS; i++) {\n//           newPositions[i] = {\n//             top: `${parseFloat(newPositions[i].top) + (parseFloat(prevPositions[i - 1].top) - parseFloat(newPositions[i].top)) * SMOOTHNESS}px`,\n//             left: `${parseFloat(newPositions[i].left) + (parseFloat(prevPositions[i - 1].left) - parseFloat(newPositions[i].left)) * SMOOTHNESS}px`,\n//           };\n//         }\n//         return newPositions;\n//       });\n//       animationFrame = requestAnimationFrame(animate);\n//     };\n\n//     animationFrame = requestAnimationFrame(animate);\n//     return () => cancelAnimationFrame(animationFrame);\n//   }, []);\n\n//   const handleMouseMove = (e) => {\n//     const rect = e.currentTarget.getBoundingClientRect();\n//     const x = e.clientX - rect.left;\n//     const y = e.clientY - rect.top;\n\n//     setPositions((prevPositions) => {\n//       const newPositions = [...prevPositions];\n//       newPositions[0] = { top: `${y}px`, left: `${x}px` };\n//       return newPositions;\n//     });\n//   };\n\n//   return (\n//     <div className=\"card-2\" onMouseMove={handleMouseMove}>\n//       {positions.map((pos, index) => (\n//         <div\n//           key={index}\n//           className=\"blob-2\"\n//           style={{\n//             top: pos.top,\n//             left: pos.left,\n//           }}\n//         ></div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Circles;","map":{"version":3,"names":[],"sources":["/Users/pcmci-tech/visual code/React/amalyot-website/src/Animation/CIrcles.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import '../Animation/Circles.css';\n\n// const NUM_SEGMENTS = 15; \n// const SMOOTHNESS = 0.5; \n\n// const Circles = () => {\n//   const [positions, setPositions] = useState(\n//     Array.from({ length: NUM_SEGMENTS }, () => ({ top: \"50%\", left: \"50%\" }))\n//   );\n\n//   useEffect(() => {\n//     let animationFrame;\n//     const animate = () => {\n//       setPositions((prevPositions) => {\n//         const newPositions = [...prevPositions];\n//         for (let i = 1; i < NUM_SEGMENTS; i++) {\n//           newPositions[i] = {\n//             top: `${parseFloat(newPositions[i].top) + (parseFloat(prevPositions[i - 1].top) - parseFloat(newPositions[i].top)) * SMOOTHNESS}px`,\n//             left: `${parseFloat(newPositions[i].left) + (parseFloat(prevPositions[i - 1].left) - parseFloat(newPositions[i].left)) * SMOOTHNESS}px`,\n//           };\n//         }\n//         return newPositions;\n//       });\n//       animationFrame = requestAnimationFrame(animate);\n//     };\n\n//     animationFrame = requestAnimationFrame(animate);\n//     return () => cancelAnimationFrame(animationFrame);\n//   }, []);\n\n//   const handleMouseMove = (e) => {\n//     const rect = e.currentTarget.getBoundingClientRect();\n//     const x = e.clientX - rect.left;\n//     const y = e.clientY - rect.top;\n\n//     setPositions((prevPositions) => {\n//       const newPositions = [...prevPositions];\n//       newPositions[0] = { top: `${y}px`, left: `${x}px` };\n//       return newPositions;\n//     });\n//   };\n\n//   return (\n//     <div className=\"card-2\" onMouseMove={handleMouseMove}>\n//       {positions.map((pos, index) => (\n//         <div\n//           key={index}\n//           className=\"blob-2\"\n//           style={{\n//             top: pos.top,\n//             left: pos.left,\n//           }}\n//         ></div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Circles;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}