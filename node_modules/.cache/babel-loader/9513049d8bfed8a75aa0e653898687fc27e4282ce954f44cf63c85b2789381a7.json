{"ast":null,"code":"var _jsxFileName = \"/Users/pcmci-tech/visual code/React/amalyot-website/src/Animation/CIrcles.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SVGNS = 'http://www.w3.org/2000/svg';\nconst EASE = 0.7;\nconst TrailAnimation = () => {\n  _s();\n  const [pointer, setPointer] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  });\n  const svgContainerRef = useRef(null);\n  useEffect(() => {\n    const updatePointer = event => {\n      setPointer({\n        x: event.clientX,\n        y: event.clientY\n      });\n    };\n    window.addEventListener('pointermove', updatePointer);\n    return () => {\n      window.removeEventListener('pointermove', updatePointer);\n    };\n  }, []);\n  const createLine = leader => {\n    const line = document.createElementNS(SVGNS, 'line');\n    const get = gsap.getProperty(line);\n    const set = gsap.quickSetter(line, 'attr');\n    const genModifier = prop => {\n      const pos2 = `${prop}2`;\n      return () => {\n        const linePos = get(prop);\n        const leaderPos = leader(prop);\n        const linePosNext = linePos + (leaderPos - linePos) * EASE;\n        set({\n          [pos2]: leaderPos - linePosNext\n        });\n        return linePosNext;\n      };\n    };\n    gsap.set(line, pointer);\n    gsap.to(line, {\n      x: '+=1',\n      y: '+=1',\n      repeat: -1,\n      ease: 'linear',\n      modifiers: {\n        x: genModifier('x'),\n        y: genModifier('y')\n      }\n    });\n    return line;\n  };\n  const createTrail = (color, length = 10) => {\n    const svg = document.createElementNS(SVGNS, 'svg');\n    svg.style.position = 'absolute';\n    svg.style.top = 0;\n    svg.style.left = 0;\n    svg.style.width = '100%';\n    svg.style.height = '100%';\n    svg.style.pointerEvents = 'none';\n    let leader = prop => prop === 'x' ? pointer.x : pointer.y;\n    for (let i = 0; i < length; i++) {\n      const line = createLine(leader);\n      line.style.stroke = color;\n      svg.appendChild(line);\n      leader = gsap.getProperty(line);\n    }\n    svgContainerRef.current.appendChild(svg);\n  };\n  useEffect(() => {\n    createTrail('black', 30);\n    createTrail('black', 20);\n    createTrail('black', 10);\n\n    // Cleanup function to remove SVGs safely\n    return () => {\n      if (svgContainerRef.current) {\n        svgContainerRef.current.innerHTML = ''; // Safely remove all child SVGs\n      }\n    };\n  }, [pointer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: svgContainerRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s(TrailAnimation, \"y52/FzWr8L079UBIMM4fJtXBqb0=\");\n_c = TrailAnimation;\nexport default Circles;\nvar _c;\n$RefreshReg$(_c, \"TrailAnimation\");","map":{"version":3,"names":["React","useRef","useEffect","useState","gsap","jsxDEV","_jsxDEV","SVGNS","EASE","TrailAnimation","_s","pointer","setPointer","x","window","innerWidth","y","innerHeight","svgContainerRef","updatePointer","event","clientX","clientY","addEventListener","removeEventListener","createLine","leader","line","document","createElementNS","get","getProperty","set","quickSetter","genModifier","prop","pos2","linePos","leaderPos","linePosNext","to","repeat","ease","modifiers","createTrail","color","length","svg","style","position","top","left","width","height","pointerEvents","i","stroke","appendChild","current","innerHTML","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","Circles","$RefreshReg$"],"sources":["/Users/pcmci-tech/visual code/React/amalyot-website/src/Animation/CIrcles.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { gsap } from 'gsap';\n\nconst SVGNS = 'http://www.w3.org/2000/svg';\nconst EASE = 0.7;\n\nconst TrailAnimation = () => {\n  const [pointer, setPointer] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  });\n\n  const svgContainerRef = useRef(null);\n\n  useEffect(() => {\n    const updatePointer = (event) => {\n      setPointer({ x: event.clientX, y: event.clientY });\n    };\n\n    window.addEventListener('pointermove', updatePointer);\n\n    return () => {\n      window.removeEventListener('pointermove', updatePointer);\n    };\n  }, []);\n\n  const createLine = (leader) => {\n    const line = document.createElementNS(SVGNS, 'line');\n\n    const get = gsap.getProperty(line);\n    const set = gsap.quickSetter(line, 'attr');\n\n    const genModifier = (prop) => {\n      const pos2 = `${prop}2`;\n\n      return () => {\n        const linePos = get(prop);\n        const leaderPos = leader(prop);\n\n        const linePosNext = linePos + (leaderPos - linePos) * EASE;\n\n        set({ [pos2]: leaderPos - linePosNext });\n\n        return linePosNext;\n      };\n    };\n\n    gsap.set(line, pointer);\n\n    gsap.to(line, {\n      x: '+=1',\n      y: '+=1',\n      repeat: -1,\n      ease: 'linear',\n      modifiers: {\n        x: genModifier('x'),\n        y: genModifier('y'),\n      },\n    });\n\n    return line;\n  };\n\n  const createTrail = (color, length = 10) => {\n    const svg = document.createElementNS(SVGNS, 'svg');\n    svg.style.position = 'absolute';\n    svg.style.top = 0;\n    svg.style.left = 0;\n    svg.style.width = '100%';\n    svg.style.height = '100%';\n    svg.style.pointerEvents = 'none';\n\n    let leader = (prop) => (prop === 'x' ? pointer.x : pointer.y);\n\n    for (let i = 0; i < length; i++) {\n      const line = createLine(leader);\n\n      line.style.stroke = color;\n      svg.appendChild(line);\n\n      leader = gsap.getProperty(line);\n    }\n\n    svgContainerRef.current.appendChild(svg);\n  };\n\n  useEffect(() => {\n    createTrail('black', 30);\n    createTrail('black', 20);\n    createTrail('black', 10);\n\n    // Cleanup function to remove SVGs safely\n    return () => {\n      if (svgContainerRef.current) {\n        svgContainerRef.current.innerHTML = ''; // Safely remove all child SVGs\n      }\n    };\n  }, [pointer]);\n\n  return <div ref={svgContainerRef} style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%' }} />;\n};\n\nexport default Circles;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}